{
  "initial_state": "none",
  "workflow_name": "init_cyoda_setup",
  "states": {
    "none": {
      "transitions": {
        "start_chat": {
          "next": "ready_to_start_chat"
        }
      }
    },
    "ready_to_start_chat": {
      "transitions": {
        "starting_chat": {
          "next": "started_chat"
        }
      }
    },
    "started_chat": {
      "transitions": {
        "initial_notification": {
          "next": "app_requirements_requested",
          "action": {
            "name": "process_event",
            "config": {
              "type": "prompt",
              "model": {
                "model_name": "gpt-4o-mini",
                "temperature": 0.7,
                "max_tokens": 10000
              },
              "messages": [
                {
                  "role": "user",
                  "content": [
                    "Please introduce yourself as Cyoda assistance and ask if the user is ready to move forward."
                  ]
                }
              ],
              "publish": true
            }
          }
        }
      }
    },
    "app_requirements_requested": {
      "transitions": {
        "process_user_input": {
          "next": "app_requirements_requested",
          "manual": true,
          "action": {
            "name": "process_event",
            "config": {
              "type": "agent",
              "publish": true,
              "allow_anonymous_users": true,
              "model": {},
              "tools": [
                {
                  "type": "function",
                  "function": {
                    "name": "read_link",
                    "description": "Read content from a URL. Use this function when you need to fetch content from a web resource. For example, if the user wants to add data sources for an API and provides an exact link, you should first read the link contents before proceeding with analysis.",
                    "strict": true,
                    "parameters": {
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "url"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                {
                  "type": "function",
                  "function": {
                    "name": "edit_existing_app_design_additional_feature",
                    "description": "Launches workflow that is necessary to help the user plan how to edit an existing application or add a new feature. Key factor is that an application already exists. if the user doesn't specify the branch, ask yourself.",
                    "strict": true,
                    "parameters": {
                      "type": "object",
                      "properties": {
                        "git_branch": {
                          "type": "string"
                        },
                        "user_request": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "user_request",
                        "git_branch"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                {
                  "type": "function",
                  "function": {
                    "name": "add_new_entity_for_existing_app",
                    "description": "Launches workflow that is necessary to help the user add a new entity to the existing application. Key factor is that an application already exists and the user explicitly asks to add a new entity (else default to edit_existing_app_design_additional_feature). if the user doesn't specify the branch, ask yourself. Git branch is required. Ask the user explicitly or use the last branch from messages. Never default to main branch.",
                    "strict": true,
                    "parameters": {
                      "type": "object",
                      "properties": {
                        "git_branch": {
                          "type": "string"
                        },
                        "user_request": {
                          "type": "string"
                        },
                        "entity_name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "user_request",
                        "git_branch",
                        "entity_name"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                {
                  "type": "function",
                  "function": {
                    "name": "add_new_workflow",
                    "description": "Launches workflow that is necessary to help the user add a new workflow. Key factor is that an application already exists and the user explicitly asks to add a new workflow (else default to edit_existing_app_design_additional_feature). if the user doesn't specify the branch, ask yourself.  Git branch is required. Ask the user explicitly or use the last branch from messages. Never default to main branch.",
                    "strict": true,
                    "parameters": {
                      "type": "object",
                      "properties": {
                        "git_branch": {
                          "type": "string"
                        },
                        "user_request": {
                          "type": "string"
                        },
                        "entity_name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "user_request",
                        "git_branch",
                        "entity_name"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                {
                  "type": "function",
                  "function": {
                    "name": "edit_api_existing_app",
                    "description": "Launches workflow that is necessary to help the user edit/update existing api (routes.py). Key factor is that an application already exists and the user explicitly asks to add changes to its api/routes/routes.py  (else default to edit_existing_app_design_additional_feature). If the user doesn't specify the branch, ask yourself.  Git branch is required. Ask the user explicitly or use the last branch from messages. Never default to main branch.",
                    "strict": true,
                    "parameters": {
                      "type": "object",
                      "properties": {
                        "git_branch": {
                          "type": "string"
                        },
                        "user_request": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "user_request",
                        "git_branch"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                {
                  "type": "function",
                  "function": {
                    "name": "edit_existing_workflow",
                    "description": "Launches workflow that is necessary to help the user edit an existing workflow/workflow json. Key factor is that an application already exists and the user explicitly asks to update a workflow (else default to edit_existing_app_design_additional_feature). if the user doesn't specify the branch, ask yourself.  Git branch is required. Ask the user explicitly or use the last branch from messages. Never default to main branch.",
                    "strict": true,
                    "parameters": {
                      "type": "object",
                      "properties": {
                        "git_branch": {
                          "type": "string"
                        },
                        "user_request": {
                          "type": "string"
                        },
                        "entity_name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "user_request",
                        "git_branch",
                        "entity_name"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                {
                  "type": "function",
                  "function": {
                    "name": "edit_existing_processors",
                    "description": "Launches workflow that is necessary to help the user update workflow processors code. Key factor is that an application already exists and the user explicitly asks to edit/update workflow processors/functions/workflow.py code (else default to edit_existing_app_design_additional_feature). if the user doesn't specify the branch, ask yourself.  Git branch is required. Ask the user explicitly or use the last branch from messages. Never default to main branch.",
                    "strict": true,
                    "parameters": {
                      "type": "object",
                      "properties": {
                        "git_branch": {
                          "type": "string"
                        },
                        "user_request": {
                          "type": "string"
                        },
                        "entity_name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "user_request",
                        "git_branch",
                        "entity_name"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                {
                  "type": "function",
                  "function": {
                    "name": "deploy_cyoda_env",
                    "description": "Launches workflow that is necessary to deploy Cyoda environment for the user. User needs to explicitly ask for deployment of Cyoda environment.",
                    "strict": true,
                    "parameters": {
                      "type": "object",
                      "properties": {
                        "user_request": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "user_request"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                {
                  "type": "function",
                  "function": {
                    "name": "deploy_user_application",
                    "description": "Launches workflow that is necessary to deploy user client application (external calculation node). User needs to explicitly ask for deployment of their application. Branch is required.",
                    "strict": true,
                    "parameters": {
                      "type": "object",
                      "properties": {
                        "git_branch": {
                          "type": "string"
                        },
                        "user_request": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "user_request",
                        "git_branch"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                {
                  "type": "function",
                  "function": {
                    "name": "get_cyoda_guidelines",
                    "description": "Use this tool to generate configurations (workflows, entities, Cyoda settings) for informational purposes only, without modifying the application or saving data. If your goal is to change the application, this tool is not suitable. If it's unclear whether you need to modify the application or just need information, please clarify. The retrieved information can then be used to generate the required data without altering the application.",
                    "strict": true,
                    "parameters": {
                      "type": "object",
                      "properties": {
                        "workflow_name": {
                          "type": "string",
                          "enum": [
                            "generate_workflow",
                            "generate_processors",
                            "configure_trino",
                            "generate_entity",
                            "start_python_app",
                            "cyoda_best_practice"
                          ]
                        }
                      },
                      "required": [
                        "workflow_name"
                      ],
                      "additionalProperties": false
                    }
                  }
                },
                {
                  "type": "function",
                  "function": {
                    "name": "set_additional_question_flag",
                    "description": "Set true if user question requires clarification or discussion, set false if you have enough information or the user asks to proceed to the next question. If the user wants to go to the next step set False immediately",
                    "strict": true,
                    "parameters": {
                      "type": "object",
                      "properties": {
                        "transition": {
                          "type": "string",
                          "enum": [
                            "process_app_setup"
                          ]
                        },
                        "require_additional_question_flag": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "require_additional_question_flag",
                        "transition"
                      ],
                      "additionalProperties": false
                    }
                  }
                }
              ],
              "messages": [
                {
                  "role": "user",
                  "content": [
                    "Hello You are a very helpful Cyoda assistant who knows best how to achieve what the user needs.",
                    "We've just finished our great Cyoda application Lets congratulate the user on this and help them start it both locally and remotely.",
                    "First important detail The code is available in branch {branch_name}. Please make it clear. And use only this branch for this interaction.",
                    "Second, here is how to start the Cyoda application. I will give you instructions, but you need to guide the user step by step.",
                    "Communicate no more than 1 instruction at a time and make sure the user understands and is successful with the step.",
                    "Instruction",
                    "Hello Congratulations on your new Cyoda application We will go step by step to get it running smoothly. Please make sure which branch you're using. This is the only valid branch for now. Lets start with the first step. Ready.",
                    "Step 1 Locate the .env.template file in your project root. Once found, rename it to .env and open it in a text editor. Tip Use your code editors file tree or terminal to confirm its in the root directory.",
                    "Troubleshooting Can t find .env.template. Make sure you've checked out the correct branch. File still missing Check your .gitignore, or ensure the repo was cloned fully with submodules if needed.",
                    "Step 2 Edit your new .env file with the required environment specific values API keys, GRPC host, ports, etc. Tip These values are often provided by your team or in project onboarding docs.",
                    "Troubleshooting Missing values may cause runtime errors later. Make sure there are no spaces around and that values are quoted only when needed.",
                    "Step 3 Launch the application using python app.py or quart run. Tip Activate your virtual environment first e.g. source .venv/bin/activate.",
                    "Troubleshooting ModuleNotFoundError. Run pip install r requirementstxt. quart not found. Install with pip install quart. Permission errors. Try running with python3 instead of python.",
                    "Step 4 Does the project start OK Please check for any errors in the terminal before moving on.",
                    "Troubleshooting If the server crashes immediately, recheck your .env file values. Use print statements or a debugger to identify issues in app.py.",
                    "Step 5 Now lets configure your Cyoda Cloud instance. Do you already have an environment If yes, do you want to redeploy it or connect to the existing one",
                    "Troubleshooting GRPC connection failures. Ensure the GRPCHOST and GRPCPORT in your .env are correct. If youre behind a proxy, verify outbound port access.",
                    "Step 6 With your env configured, its time to import the workflows. Do you have your workflow files ready e.g., .yaml or .json. If yes, import them now via the UI or CLI.",
                    "Troubleshooting If the import fails, verify the format and version of your workflow files. Watch Cyoda Cloud logs for import errors.",
                    "Step 7 Now restart the application to ensure it connects to the Cyoda GRPC server properly. Let me know if the connection succeeds or if you hit any issues.",
                    "Troubleshooting On restart, check logs for any GRPC related errors. Missing workflow mappings can also cause silent failures confirm setup.",
                    "Step 8 Let s test your API. Go to http://localhost:5000 or your configured port, and ensure everything looks good.",
                    "Troubleshooting Cant access the local server Check if the app is still running and if your firewall settings allow local traffic.",
                    "Step 9 Navigate to the route routes/routes. You'll find an endpoint called add entity there. Try submitting an entity. Once submitted, it should trigger a GRPC event that makes the data available in Cyoda.",
                    "Troubleshooting No event in Cyoda Ensure the endpoint properly triggers GRPC and that workflow routing is correctly set. Use logs to trace the request and confirm GRPC payload was sent."
                  ]
                }
              ],
              "tool_choice": "auto",
              "max_iteration": 30,
              "approve": true
            }
          }
        },
        "process_application_requirement_success": {
          "next": "app_requirements_finalized",
          "condition": {
            "config": {
              "type": "function",
              "function": {
                "name": "is_stage_completed",
                "description": "is_stage_completed",
                "parameters": {
                  "transition": "process_app_setup"
                }
              }
            }
          }
        }
      }
    },
    "app_requirements_finalized": {
      "transitions": {
        "ask_about_api": {
          "next": "proceeded_to_functional_requirements",
          "action": {
            "name": "process_event",
            "config": {
              "type": "notification",
              "notification": "Next up: functional requirements.\nStay tuned — thoughtful thinking in progress. \uD83E\uDDE0✨",
              "publish": true,
              "allow_anonymous_users": true
            }
          }
        }
      }
    }
  }
}

