{
  "tools": [
    {
      "name": "get_user_info",
      "description": "Use this tool to get user information like user environment URL, user branch name etc",
      "parameters": {
        "type": "object",
        "properties": {
          "user_request": {
            "type": "string",
            "description": "User request for information"
          }
        },
        "required": ["user_request"],
        "additionalProperties": false
      }
    },
    {
      "name": "web_search",
      "description": "Search the web using Google Custom Search API. Use this function when you need to formulate questions or requirements for information to be searched online.",
      "parameters": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "Search query"
          }
        },
        "required": ["query"],
        "additionalProperties": false
      }
    },
    {
      "name": "read_link",
      "description": "Read content from a URL. Use this function when you need to fetch content from a web resource.",
      "parameters": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL to read content from"
          }
        },
        "required": ["url"],
        "additionalProperties": false
      }
    },
    {
      "name": "web_scrape",
      "description": "Scrape content from a webpage using a CSS selector. Use this function when you need to scrape online content.",
      "parameters": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "URL to scrape"
          },
          "selector": {
            "type": "string",
            "description": "CSS selector for content to scrape"
          }
        },
        "required": ["url", "selector"],
        "additionalProperties": false
      }
    },
    {
      "name": "build_general_application",
      "description": "Launches workflow that is necessary to build a new application. Do not use for editing existing applications. Only Python with Cyoda framework are available.",
      "parameters": {
        "type": "object",
        "properties": {
          "user_request": {
            "type": "string",
            "description": "User request for building application"
          },
          "programming_language": {
            "type": "string",
            "enum": ["JAVA", "PYTHON"],
            "description": "Programming language for the application"
          }
        },
        "required": ["user_request", "programming_language"],
        "additionalProperties": false
      }
    },
    {
      "name": "edit_existing_app_design_additional_feature",
      "description": "Launches workflow that is necessary to help the user plan how to edit an existing application or add a new feature. Key factor is that an application already exists.",
      "parameters": {
        "type": "object",
        "properties": {
          "git_branch": {
            "type": "string",
            "description": "Git branch name"
          },
          "user_request": {
            "type": "string",
            "description": "User request for editing application"
          }
        },
        "required": ["user_request", "git_branch"],
        "additionalProperties": false
      }
    },
    {
      "name": "add_new_entity_for_existing_app",
      "description": "Launches workflow that is necessary to help the user add a new entity to the existing application. Git branch is required.",
      "parameters": {
        "type": "object",
        "properties": {
          "git_branch": {
            "type": "string",
            "description": "Git branch name"
          },
          "user_request": {
            "type": "string",
            "description": "User request for adding entity"
          },
          "entity_name": {
            "type": "string",
            "description": "Name of the entity to add"
          },
          "programming_language": {
            "type": "string",
            "enum": ["JAVA", "PYTHON"],
            "description": "Programming language"
          }
        },
        "required": ["user_request", "git_branch", "entity_name", "programming_language"],
        "additionalProperties": false
      }
    },
    {
      "name": "add_new_workflow",
      "description": "Launches workflow that is necessary to help the user add a new workflow. Git branch is required.",
      "parameters": {
        "type": "object",
        "properties": {
          "git_branch": {
            "type": "string",
            "description": "Git branch name"
          },
          "user_request": {
            "type": "string",
            "description": "User request for adding workflow"
          },
          "entity_name": {
            "type": "string",
            "description": "Name of the entity"
          },
          "programming_language": {
            "type": "string",
            "enum": ["JAVA", "PYTHON"],
            "description": "Programming language"
          }
        },
        "required": ["user_request", "git_branch", "entity_name", "programming_language"],
        "additionalProperties": false
      }
    },
    {
      "name": "edit_api_existing_app",
      "description": "Launches workflow that is necessary to help the user edit/update existing api (routes.py). Git branch is required.",
      "parameters": {
        "type": "object",
        "properties": {
          "git_branch": {
            "type": "string",
            "description": "Git branch name"
          },
          "user_request": {
            "type": "string",
            "description": "User request for editing API"
          },
          "programming_language": {
            "type": "string",
            "enum": ["JAVA", "PYTHON"],
            "description": "Programming language"
          }
        },
        "required": ["user_request", "git_branch", "programming_language"],
        "additionalProperties": false
      }
    },
    {
      "name": "edit_existing_workflow",
      "description": "Launches workflow that is necessary to help the user edit an existing workflow/workflow json. Git branch is required.",
      "parameters": {
        "type": "object",
        "properties": {
          "git_branch": {
            "type": "string",
            "description": "Git branch name"
          },
          "user_request": {
            "type": "string",
            "description": "User request for editing workflow"
          },
          "entity_name": {
            "type": "string",
            "description": "Name of the entity"
          },
          "programming_language": {
            "type": "string",
            "enum": ["JAVA", "PYTHON"],
            "description": "Programming language"
          }
        },
        "required": ["user_request", "git_branch", "entity_name", "programming_language"],
        "additionalProperties": false
      }
    },
    {
      "name": "edit_existing_processors",
      "description": "Launches workflow that is necessary to help the user update workflow processors code. Git branch is required.",
      "parameters": {
        "type": "object",
        "properties": {
          "git_branch": {
            "type": "string",
            "description": "Git branch name"
          },
          "user_request": {
            "type": "string",
            "description": "User request for editing processors"
          },
          "entity_name": {
            "type": "string",
            "description": "Name of the entity"
          },
          "programming_language": {
            "type": "string",
            "enum": ["JAVA", "PYTHON"],
            "description": "Programming language"
          }
        },
        "required": ["user_request", "git_branch", "entity_name", "programming_language"],
        "additionalProperties": false
      }
    },
    {
      "name": "init_setup_workflow",
      "description": "Launches workflow that is necessary to help the user to do initial setup and launch locally their client application. Git branch is required.",
      "parameters": {
        "type": "object",
        "properties": {
          "git_branch": {
            "type": "string",
            "description": "Git branch name"
          },
          "user_request": {
            "type": "string",
            "description": "User request for setup"
          },
          "programming_language": {
            "type": "string",
            "enum": ["JAVA", "PYTHON"],
            "description": "Programming language"
          }
        },
        "required": ["user_request", "git_branch", "programming_language"],
        "additionalProperties": false
      }
    },
    {
      "name": "deploy_cyoda_env",
      "description": "Launches workflow that is necessary to deploy Cyoda environment for the user. User needs to explicitly ask for deployment of Cyoda environment.",
      "parameters": {
        "type": "object",
        "properties": {
          "user_request": {
            "type": "string",
            "description": "User request for Cyoda environment deployment"
          }
        },
        "required": ["user_request"],
        "additionalProperties": false
      }
    },
    {
      "name": "deploy_user_application",
      "description": "Launches workflow that is necessary to deploy user client application (external calculation node). Branch is required.",
      "parameters": {
        "type": "object",
        "properties": {
          "git_branch": {
            "type": "string",
            "description": "Git branch name"
          },
          "user_request": {
            "type": "string",
            "description": "User request for application deployment"
          },
          "programming_language": {
            "type": "string",
            "enum": ["JAVA", "PYTHON"],
            "description": "Programming language"
          }
        },
        "required": ["user_request", "git_branch", "programming_language"],
        "additionalProperties": false
      }
    },
    {
      "name": "get_cyoda_guidelines",
      "description": "Use this tool to generate configurations (workflows, entities, Cyoda settings) for informational purposes only, without modifying the application.",
      "parameters": {
        "type": "object",
        "properties": {
          "workflow_name": {
            "type": "string",
            "enum": ["generate_workflow", "generate_processors", "configure_trino", "generate_entity", "start_python_app", "cyoda_best_practice"],
            "description": "Type of guideline to retrieve"
          }
        },
        "required": ["workflow_name"],
        "additionalProperties": false
      }
    },
    {
      "name": "resume_build_general_application",
      "description": "Resumes building an application by branch_name. Transition, git branch and programming language should be provided by the user.",
      "parameters": {
        "type": "object",
        "properties": {
          "user_request": {
            "type": "string",
            "description": "User request for resuming build"
          },
          "programming_language": {
            "type": "string",
            "enum": ["JAVA", "PYTHON"],
            "description": "Programming language"
          },
          "git_branch": {
            "type": "string",
            "description": "Git branch name"
          },
          "transition": {
            "type": "string",
            "enum": ["build_new_app", "discuss_functional_requirements", "edit_functional_requirements", "prototype_discussion_requested", "resume_migration", "resume_prototype_cyoda_workflow", "resume_gen_prototype_cyoda_workflow_json", "resume_gen_entities", "resume_post_app_build_steps"],
            "description": "Transition state for resuming"
          }
        },
        "required": ["user_request", "git_branch", "transition", "programming_language"],
        "additionalProperties": false
      }
    },
    {
      "name": "convert_workflow_to_dto",
      "description": "Convert json workflow to cyoda dto for future import to cyoda env. Entity name, entity version, programming language and git branch are required.",
      "parameters": {
        "type": "object",
        "properties": {
          "entity_name": {
            "type": "string",
            "description": "Name of the entity"
          },
          "entity_version": {
            "type": "string",
            "description": "Version of the entity"
          },
          "programming_language": {
            "type": "string",
            "enum": ["PYTHON", "JAVA"],
            "description": "Programming language"
          },
          "workflow_file_name": {
            "type": "string",
            "enum": ["entity/{entity_name}/workflow.json", "src/main/java/com/java_template/entity/{entity_name}/Workflow.json"],
            "description": "Input workflow file path"
          },
          "output_file_name": {
            "type": "string",
            "enum": ["cyoda_dto/{entity_name}/workflow.json", "src/main/java/com/java_template/cyoda_dto/{entity_name}/workflow.json"],
            "description": "Output DTO file path"
          },
          "git_branch": {
            "type": "string",
            "description": "Git branch name"
          }
        },
        "required": ["entity_name", "entity_version", "git_branch", "workflow_file_name", "output_file_name", "programming_language"],
        "additionalProperties": false
      }
    },
    {
      "name": "get_env_deploy_status",
      "description": "Use if the user wants to know the status of their environment build/deploy.",
      "parameters": {
        "type": "object",
        "properties": {
          "build_id": {
            "type": "string",
            "description": "Build ID to check status for"
          }
        },
        "required": ["build_id"],
        "additionalProperties": false
      }
    },
    {
      "name": "ui_function_issue_technical_user",
      "description": "Use for requests like give me a technical user. This will return CYODA_CLIENT_ID and CYODA_CLIENT_SECRET.",
      "parameters": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": ["POST"],
            "description": "HTTP method"
          },
          "path": {
            "type": "string",
            "enum": ["/api/clients"],
            "description": "API path"
          },
          "response_format": {
            "type": "string",
            "enum": ["file"],
            "description": "Response format"
          }
        },
        "required": ["method", "path", "response_format"],
        "additionalProperties": false
      }
    },
    {
      "name": "ui_function_list_all_technical_users",
      "description": "Use for requests like give me all technical/m2m users. This will return the list of M2M clients.",
      "parameters": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": ["GET"],
            "description": "HTTP method"
          },
          "path": {
            "type": "string",
            "enum": ["/api/clients"],
            "description": "API path"
          },
          "response_format": {
            "type": "string",
            "enum": ["text"],
            "description": "Response format"
          }
        },
        "required": ["method", "path", "response_format"],
        "additionalProperties": false
      }
    },
    {
      "name": "ui_function_reset_client_secret",
      "description": "Use for requests like please reset the client secret for my technical user. The user needs to explicitly give you clientId.",
      "parameters": {
        "type": "object",
        "properties": {
          "method": {
            "type": "string",
            "enum": ["PUT"],
            "description": "HTTP method"
          },
          "path": {
            "type": "string",
            "enum": ["/api/clients/{clientId}/secret"],
            "description": "API path"
          },
          "response_format": {
            "type": "string",
            "enum": ["text"],
            "description": "Response format"
          }
        },
        "required": ["method", "path", "response_format"],
        "additionalProperties": false
      }
    },
    {
      "name": "schedule_deploy_env",
      "description": "Schedule environment deployment",
      "parameters": {
        "type": "object",
        "properties": {
          "user_request": {
            "type": "string",
            "description": "User request for environment deployment"
          }
        },
        "required": ["user_request"],
        "additionalProperties": false
      }
    },
    {
      "name": "schedule_build_user_application",
      "description": "Schedule user application build",
      "parameters": {
        "type": "object",
        "properties": {
          "user_request": {
            "type": "string",
            "description": "User request for application build"
          },
          "repository_name": {
            "type": "string",
            "description": "Repository name"
          },
          "git_branch": {
            "type": "string",
            "description": "Git branch name",
            "default": "main"
          }
        },
        "required": ["user_request", "repository_name"],
        "additionalProperties": false
      }
    },
    {
      "name": "schedule_deploy_user_application",
      "description": "Schedule user application deployment",
      "parameters": {
        "type": "object",
        "properties": {
          "user_request": {
            "type": "string",
            "description": "User request for application deployment"
          },
          "repository_name": {
            "type": "string",
            "description": "Repository name"
          },
          "git_branch": {
            "type": "string",
            "description": "Git branch name",
            "default": "main"
          }
        },
        "required": ["user_request", "repository_name"],
        "additionalProperties": false
      }
    },
    {
      "name": "get_weather",
      "description": "Get current weather information",
      "parameters": {
        "type": "object",
        "properties": {
          "location": {
            "type": "string",
            "description": "Location for weather information",
            "default": "Unknown"
          }
        },
        "required": [],
        "additionalProperties": false
      }
    },
    {
      "name": "get_humidity",
      "description": "Get current humidity information",
      "parameters": {
        "type": "object",
        "properties": {
          "location": {
            "type": "string",
            "description": "Location for humidity information",
            "default": "Unknown"
          }
        },
        "required": [],
        "additionalProperties": false
      }
    }
  ]
}
