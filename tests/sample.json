{
  "name": "specify_name_that_describes_the_workflow",
  "description": "describe_the_workflow",
  "workflow_criteria": {
    "externalized_criteria": [],
    "condition_criteria": []
  },
  "transitions": [
    {
      "name": "spark_happy_message",
      "description": "Spark the happy message",
      "start_state": "None",
      "start_state_description": "Initial state",
      "end_state": "Happy_message_sparked",
      "end_state_description": "A happy message has been sparked",
      "automated": true,
      "transition_criteria": {
        "externalized_criteria": [],
        "condition_criteria": [
          {
            "name": "isSparkable",
            "description": "checks whether a message can spark",
            "condition": {
              "group_condition_operator": "OR",
              "conditions": [
                {
                  "is_meta_field": false,
                  "field_name": "totatAmount",
                  "value_type": "doubles",
                  "operation": "less than",
                  "value": "20.0"
                },
                {
                  "group_condition_operator": "AND",
                  "conditions": [
                    {
                      "is_meta_field": true,
                      "field_name": "state",
                      "operation": "does not start with",
                      "value": "abc"
                    },
                    {
                      "is_meta_field": true,
                      "field_name": "entityModelName",
                      "operation": "contains",
                      "value": "spark"
                    }
                  ]
                }
              ]
            }
          }
        ]
      },
      "processes": {
        "schedule_transition_processors": [
          {
            "name": "scheduleMessageSending",
            "description": "Schedules the message to be sent (with a given delay).",
            "delay_ms": "3000",
            "timeout_ms": "5000",
            "transition_name": "send_happy_message",
            "sync_process": true,
            "new_transaction_for_async": false,
            "none_transactional_for_async": false,
            "processor_criteria": {
              "externalized_criteria": [],
              "condition_criteria": []
            }
          }
        ],
        "externalized_processors": []
      }
    },
    {
      "name": "send_happy_message",
      "description": "Send the happy message",
      "start_state": "Happy_message_sparked",
      "start_state_description": "A happy message has been sparked",
      "end_state": "Message_sent",
      "end_state_description": "The happy message has been sent",
      "automated": false,
      "transition_criteria": {
        "externalized_criteria": [
          {
            "name": "isEmailSendingPossible",
            "description": "checks whether an email can be sent at the moment",
            "calculation_nodes_tags": "technical",
            "attach_entity": true,
            "calculation_response_timeout_ms": "5000",
            "retry_policy": "FIXED"
          }
        ],
        "condition_criteria": []
      },
      "processes": {
        "schedule_transition_processors": [],
        "externalized_processors": [
          {
            "name": "calculateTotalAmount",
            "description": "",
            "calculation_nodes_tags": "accounting,revenue",
            "attach_entity": true,
            "calculation_response_timeout_ms": "5000",
            "retry_policy": "FIXED",
            "sync_process": false,
            "new_transaction_for_async": false,
            "none_transactional_for_async": false,
            "processor_criteria": {
              "externalized_criteria": [],
              "condition_criteria": []
            }
          }
        ]
      }
    }
  ]
}