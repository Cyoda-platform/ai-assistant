name: ai-assistant

imagePullSecret:
  enabled: true

enabled: true
useNamespaceForIngress: false

imagePullSecrets:
  - name: regcred
container:
  env:
    vars:
      PROJECT_ROOT: "/app"
      PYTHONPATH: "/app"
      MCP_SERVER_PORT: "8002"
      APP_PORT: "5000"
    extraVars: []
    configMaps: []
    secrets: []
podAnnotations: {}
host:
  name: ""

health:
  liveness:
    path: /
    initialDelaySeconds: 30
    timeoutSeconds: 5
    periodSeconds: 30
    failureThreshold: 10
  readiness:
    path: /api/mcp/health
    initialDelaySeconds: 15
    timeoutSeconds: 5
    periodSeconds: 10
    failureThreshold: 3
service:
  name: ai-assistant-service
  type: NodePort
  serverPort:
    port: 5000
    target: 5000
    name: http
  mcpPort:
    port: 8002
    target: 8002
    name: mcp

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
  path: api
  pathType: Prefix
  tls: []

# MCP (Model Context Protocol) Server Configuration
mcp:
  enabled: true
  # Dedicated ingress for MCP-only access (optional)
  dedicatedIngress:
    enabled: true
    host: mcp.yourdomain.com
    annotations: {}
    tls:
      - hosts:
          - mcp.yourdomain.com
        secretName: ai-assistant-mcp-tls

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

extraVolumeMounts: {}
extraVolumes: {}
securityContext: {}
tolerations: { }
priorityClassName: { }
serviceAccountName: { }
hostAliases: { }
affinity: { }
strategy: {}

image:
  pullPolicy: Always
  imageName: ai-assistant
replicaCount: 1
actuatorEnabled: false