name: ai-assistant-ui

registry:
  host: "REGISTRY_HOST_VAR"
  username: "REGISTRY_USERNAME_VAR"
  password: "REGISTRY_PASSWORD_VAR"
imagePullSecret:
  enabled: true
enabled: true
useNamespaceForIngress: false

imagePullSecrets:
  - name: regcred
revisionHistoryLimit: 10
pollingInterval: 15000
container:
  env:
    vars: {}
    extraVars: []
    configMaps: []
    secrets: []
podAnnotations: {}
host:
  name: ""
  transferProtocol: "https"
auth0:
  clientId: ""
  domain: ""
  audience: ""
  organization: ""
health:
  liveness:
    path: /actuator/health/liveness
    initialDelaySeconds: 30
    timeoutSeconds: 5
    periodSeconds: 30
    failureThreshold: 10
  readiness:
    path: /actuator/health/readiness
    initialDelaySeconds: 30
    timeoutSeconds: 5
    periodSeconds: 30
    failureThreshold: 10
service:
  name: ai-assistant-ui-service
  type: NodePort
  serverPort:
    port: 80
    target: 8080
    name: http

ingress:
  enabled: true
  className: "nginx"
  annotations: {}
  path: (/|$)(.*)
  pathType: Prefix
  tls: []

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

extraVolumeMounts: {}
extraVolumes: {}
securityContext: {}
tolerations: { }
priorityClassName: { }
serviceAccountName: { }
hostAliases: { }
affinity: { }
strategy: {}

image:
  pullPolicy: Always
  imageName: ai-assistant-ui
replicaCount: 1
actuatorEnabled: false