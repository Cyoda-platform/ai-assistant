Hello! i'd like to build an app that manages deployment and env configuration for multiple users.


The application should have the following api:

For all auth via Bearer token, token will be provided by the client

1. Deploying cyoda env
add endpoint POST /deploy/cyoda-env
{
    "user_name": "test"
}
Request only user name and trigger the following action:

Action:
POST https://teamcity.cyoda.org/app/rest/buildQueue
{
    "buildType": {
        "id": "KubernetesPipeline_CyodaSaas"
    },
    "properties": {
        "property": [
            {
                "name": "user_defined_keyspace",
                "value": user_name
            },
            {
                "name": "user_defined_namespace",
                "value": user_name
            }
        ]
    }
}
it will return build id

2. Deploying the user application by repositoty url
Add endpoint POST /deploy/user_app, request useer reopsitory link
{
    "repository_url": "http://....",
    "is_public": "true",
    "user_name": "test"
}

Implement Action:
POST https://teamcity.cyoda.org/app/rest/buildQueue
{
    "buildType": {
        "id": "KubernetesPipeline_CyodaSaasUserEnv"
    },
    "properties": {
        "property": [
            {
                "name": "repository_url",
                "value": user_name
            },
            {
                "name": "user_defined_namespace",
                "value": user_name
            }
        ]
    }
}
it will return build id

3. Get cyoda env deployment status
Add endpoint GET /deploy/cyoda-env/status/$build_id (this is build id you received in post request)
Action:
GET https://teamcity.cyoda.org/app/rest/buildQueue/id:build_id

4. Get cyoda env deployment stats
GET /deploy/cyoda-env/statistics/$build_id
Action:
GET https://teamcity.cyoda.org/app/rest/builds/id:build_id/statistics/

Same for user deployment
5. GET /deploy/user_app/status/$build_id
Action:
GET https://teamcity.cyoda.org/app/rest/buildQueue/id:build_id


6. GET /deploy/user_app/statistics/$id
GET https://teamcity.cyoda.org/app/rest/builds/id:build_id/statistics/


7. Cancel user app deployment :
POST /deploy/cancel/user_app/$build_id
Action:
POST https://teamcity.cyoda.org/app/rest/builds/id:build_id
{
    "comment": "Canceling a queued build",
    "readdIntoQueue": false
}

U can improve this api to comply with RESTful
